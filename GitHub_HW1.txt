JSON

 4. Создать внешний репозиторий c названием JSON.
Нажать кнопку create New Repository
Задаём имя JSON, выбираем Public repo, add a Readmy file, create repo.
 5. Клонировать репозиторий JSON на локальный компьютер. 
git clone https://github.com/OlgaPeseckaya/JSON.git
 6. Внутри локального JSON создать файл “new.json”. 
touch new.json
 7. Добавить файл под гит.
git add new.json
 8. Закоммитить файл.
git commit -m "nothing"
 9. Отправить файл на внешний GitHub репозиторий.
git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
Всё написать в формате JSON.
vim new.json
В редакторе входим в режим редактирования кнопкой i, далее пишем:
{
	"full_name":"Olga Sergeevna Peseckaya",
	"age":21,
	"pets":0,
	"want_salary":"$2000" 
}
Жмём Esc и вводим в строку :wq для сохранения и выхода
 11. Отправить изменения на внешний репозиторий.
git commit -am "add info" - добавить изменения и закоммитить
git push - отправить на Гит
 12. Создать файл preferences.json
vim preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую 
хотели бы посетить) в формате JSON.
В редакторе входим в режим редактирования кнопкой i, далее пишем:
{
        "favorite_move":"American beauty",
        "favorite_series":"Shameless",
        "favorite_food":"cheese",
        "favorite_season":"autumn",
        "conty_to_visit":"USA"
}
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
vim skills.json
i
{
        "skills":{
                "1":"Terminal linux",
                "2":"Git",
                "3":"Client Server",
                "4":"SQL",
                "5":"Postman",
                "6":"Mobile testing"
        }
}
Esc :wq
 15. Отправить сразу 2 файла на внешний репозиторий.
git commit -am "add 2 files"
git push
 16. На веб интерфейсе создать файл bug_report.json.
В репозитории JSON нажимаем кнопку Add file > Creat new file
В названии пишем bug_report.json
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Кнопка Commit changes
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
Заходим в файл bug_report.json
Пишем: 
{
  "Bug_ID":"В баг-трекинговых системах определяется автоматически",
  "Title":"Название (также Summary), важно граммотно изложить мысль, чтобы сразу было понятно что делать",
  "Enviroment":"Окружение, где проверяется (ОС, браузер, версия)",
  "Precondition":"Условия для воспроизведения бага",
  "STR":"Шаги воспроизведения бага",
  "AR":"Актуальный результат, что мы получаем сейчас",
  "EX":"Ожидаемый результат (что по идее должно быть)",
  "Attachments":"Видео или картинка воспроизведения бага"
}
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Кнопка Commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON
git pull

XML

 21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер.
git clone https://github.com/OlgaPeseckaya/XML.git
 23. Внутри локального XML создать файл “new.xml”.
touch new.xml
 24. Добавить файл под гит.
git add new.xml
 25. Закоммитить файл.
git commit -m "add file"
 26. Отправить файл на внешний GitHub репозиторий.
git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
vim new.xml
i
<full_name>Olga Sergeevna Peseckaya</full_name>
<age>21</age>
<pets>0</pets>
<want_salary>$2000"</want_salary
Esc и :wq
 28. Отправить изменения на внешний репозиторий.
git commit -am "add info" & git push
 29. Создать файл preferences.xml
touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
vim preferences.xml
i
<favorite_move>American beauty</favorite_move>
<favorite_series>Shameless</favorite_series>
<favorite_food>cheese</favorite_food>
<favorite_season>autumn</favorite_season>
<conty_to_visit>USA</conty_to_visit>
Esc и :wq
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
vim sklls.xml
i
<skills>
        <1>Terminal linux</1>
        <2>Git</2>
        <3>Client Server</3>
        <4>SQL</4>
        <5>Postman</5>
        <6>Mobile testing</6>
</skills>
Esc и :wq
 32. Сделать коммит в одну строку.
git add . && git commit -m "add 2 file"
 33. Отправить сразу 2 файла на внешний репозиторий.
git push
 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
<bug_report>
  <Bug_ID>В баг-трекинговых системах определяется автоматически</Bug_ID>
  <Title>Название (также Summary), важно граммотно изложить мысль, чтобы сразу было понятно что делать</Title>
  <Enviroment>Окружение, где проверяется (ОС, браузер, версия)</Enviroment>
  <Precondition>Условия для воспроизведения бага</Precondition>
  <STR>Шаги воспроизведения бага</STR>
  <AR>Актуальный результат, что мы получаем сейчас</AR>
  <EX>Ожидаемый результат (что по идее должно быть)</EX>
  <Attachments>Видео или картинка воспроизведения бага</Attachments>
</bug_report>
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML
git pull

TXT

 1. Создать внешний репозиторий c названием TXT.
 2. Клонировать репозиторий TXT на локальный компьютер.
git clone https://github.com/OlgaPeseckaya/TXT.git
 3. Внутри локального TXT создать файл “new.txt”.
cd TXT
touch new.txt
 4. Добавить файл под гит.
git add new.txt
 5. Закоммитить файл.
git commit -m "no info"
 6. Отправить файл на внешний GitHub репозиторий.
git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
vim new.txt 
i
1. Full name: Olga Sergeevna Peseckaya
2. Age: 21
3. Pets: 0
4. Want salary: $2000
Esc + :wq
 8. Отправить изменения на внешний репозиторий.
git push
 9. Создать файл preferences.txt
touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
vim preferences.txt
i
1. Favorite move: American beauty
2. Favorite series: Shameless
3. Favorite food: cheese
4. Favorite season: autumn
5. Conty to visit: USA
Esc + :wq
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
touch sklls.txt
vim sklls.txt
i
Skills:
 1. Terminal linux;
 2. Git;
 3. Client Servez;
 4. SQL;
 5. Postman;
 6. Mobile testing.
Esc + :wq
 12. Сделать коммит в одну строку.
git add . && git commit -m "add 2 file"
 13. Отправить сразу 2 файла на внешний репозиторий.
git push
 14. На веб интерфейсе создать файл bug_report.txt.
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. Синхронизировать внешний и локальный репозиторий TXT
git pull